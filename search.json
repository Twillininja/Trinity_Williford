[
  {
    "objectID": "projects.html",
    "href": "projects.html",
    "title": "Projects",
    "section": "",
    "text": "Title\n\n\n\nAuthor\n\n\n\n\n\n\n\n\nFinal_Project\n\n\n \n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Trinity Williford",
    "section": "",
    "text": "I am a graduate student in the Microbiology and Immunology Department at the University of Oklahoma Health Sciences Center. I recently joined the lab of Dr. Iker Etchegaray and Dr. Bill Freeman where we are studying the intersection between the Immune system and Nervous system (Neuroimmunology) in the context of inflammaging.\n\n\n\nMy research interests include neurodegenerative diseases, such as Alzheimer’s Disease (AD) and the role of microglia, the resident CNS immune cell, in disease progression. My hope is to understand microglial phenotypic changes, phagocytic, and signaling capacities in response to inflammation. As of now, it is unclear how this reactivity affects AD pathogenesis. Although the prevailing view is that microgliosis protects against damage, chronic microglial hyperactivation may promote disease. In our AD studies, we have identified an unexplored increase of Major Histocompatibility Complex I (MHC-I) in microglia, which may play a critical role in microglial plasticity. This lead my lab and I to focus on understanding the mechanisms behind MHC-I in the brain. We hope to determine if MHC-I suppression early in disease exacerbates AD pathology or if MHC-I inhibition after disease development slows progression. Maybe, through the exploration of these mechanisms, we can find remedies to AD.\n\n\n\nI have expertise in Immunology and Neurology, microglia, flow cytometry, cell isolation, and micro-dissections. I have mentored undergraduate and maintain good academic standing with my institution."
  },
  {
    "objectID": "index.html#bio",
    "href": "index.html#bio",
    "title": "Trinity Williford",
    "section": "",
    "text": "I am a graduate student in the Microbiology and Immunology Department at the University of Oklahoma Health Sciences Center. I recently joined the lab of Dr. Iker Etchegaray and Dr. Bill Freeman where we are studying the intersection between the Immune system and Nervous system (Neuroimmunology) in the context of inflammaging."
  },
  {
    "objectID": "index.html#research-goals",
    "href": "index.html#research-goals",
    "title": "Trinity Williford",
    "section": "",
    "text": "My research interests include neurodegenerative diseases, such as Alzheimer’s Disease (AD) and the role of microglia, the resident CNS immune cell, in disease progression. My hope is to understand microglial phenotypic changes, phagocytic, and signaling capacities in response to inflammation. As of now, it is unclear how this reactivity affects AD pathogenesis. Although the prevailing view is that microgliosis protects against damage, chronic microglial hyperactivation may promote disease. In our AD studies, we have identified an unexplored increase of Major Histocompatibility Complex I (MHC-I) in microglia, which may play a critical role in microglial plasticity. This lead my lab and I to focus on understanding the mechanisms behind MHC-I in the brain. We hope to determine if MHC-I suppression early in disease exacerbates AD pathology or if MHC-I inhibition after disease development slows progression. Maybe, through the exploration of these mechanisms, we can find remedies to AD."
  },
  {
    "objectID": "index.html#experience",
    "href": "index.html#experience",
    "title": "Trinity Williford",
    "section": "",
    "text": "I have expertise in Immunology and Neurology, microglia, flow cytometry, cell isolation, and micro-dissections. I have mentored undergraduate and maintain good academic standing with my institution."
  },
  {
    "objectID": "projects/Final_project.html",
    "href": "projects/Final_project.html",
    "title": "Final_Project",
    "section": "",
    "text": "Aging and neurodegenerative diseases, such as Alzheimer’s Disease (AD), are associated with chronic, sterile inflammation (inflammaging). Microglia, the resident CNS immune cell, responds to insults by altering their phenotype and thus increasing their phagocytic and signaling capacities. However, it is unclear how this reactivity affects aging or AD pathogenesis. The prevailing view is that microgliosis protects against damage, but during aging and AD neuropathology, chronic microglial hyperactivation may promote inflammation and disease.\nIn our studies, we have identified three types of microglia: homeostatic, intermediate, and disease-associated (DAMs). Homeostatic microglia are considered to maintain a healthy environment while DAMs are inflammatory. During aging, the proportion of DAMs relative to homeostatic and intermediate microglia changes. Here, we explore the genetic components that may contribute to these changes."
  },
  {
    "objectID": "projects/Final_project.html#microglia-homeostatic-intermediate-and-disease-associated",
    "href": "projects/Final_project.html#microglia-homeostatic-intermediate-and-disease-associated",
    "title": "Final_Project",
    "section": "",
    "text": "Aging and neurodegenerative diseases, such as Alzheimer’s Disease (AD), are associated with chronic, sterile inflammation (inflammaging). Microglia, the resident CNS immune cell, responds to insults by altering their phenotype and thus increasing their phagocytic and signaling capacities. However, it is unclear how this reactivity affects aging or AD pathogenesis. The prevailing view is that microgliosis protects against damage, but during aging and AD neuropathology, chronic microglial hyperactivation may promote inflammation and disease.\nIn our studies, we have identified three types of microglia: homeostatic, intermediate, and disease-associated (DAMs). Homeostatic microglia are considered to maintain a healthy environment while DAMs are inflammatory. During aging, the proportion of DAMs relative to homeostatic and intermediate microglia changes. Here, we explore the genetic components that may contribute to these changes."
  },
  {
    "objectID": "projects/Final_project.html#bulk-rnaseq-of-microglia-phenotypes-across-ages",
    "href": "projects/Final_project.html#bulk-rnaseq-of-microglia-phenotypes-across-ages",
    "title": "Final_Project",
    "section": "Bulk-RNAseq of Microglia Phenotypes Across Ages",
    "text": "Bulk-RNAseq of Microglia Phenotypes Across Ages\nHere, I am analyzing Bulk-RNAseq data that describes four different conditions: Young Homeostatic, Old Homeostatic, Old Transition (Intermediate), and Old DAMs.\n\nInstalling Packages\nWe begin by installing the necessary packages needed for our data analysis.\n\n## install packages and open library \ninstall.packages(\"BiocManager\")\n\nInstalling package into '/home/runner/work/_temp/Library'\n(as 'lib' is unspecified)\n\nBiocManager::install(\"DESeq2\")\n\n'getOption(\"repos\")' replaces Bioconductor standard repositories, see\n'help(\"repositories\", package = \"BiocManager\")' for details.\nReplacement repositories:\n    CRAN: https://cran.rstudio.com\n\n\nBioconductor version 3.16 (BiocManager 1.30.26), R 4.2.3 (2023-03-15)\n\n\nInstalling package(s) 'BiocVersion', 'DESeq2'\n\n\nalso installing the dependencies 'bitops', 'formatR', 'plogr', 'png', 'Biostrings', 'RCurl', 'GenomeInfoDbData', 'zlibbioc', 'lambda.r', 'futile.options', 'XML', 'xtable', 'RSQLite', 'KEGGREST', 'GenomeInfoDb', 'XVector', 'MatrixGenerics', 'DelayedArray', 'futile.logger', 'snow', 'BH', 'annotate', 'AnnotationDbi', 'S4Vectors', 'IRanges', 'GenomicRanges', 'SummarizedExperiment', 'BiocGenerics', 'Biobase', 'BiocParallel', 'matrixStats', 'locfit', 'geneplotter', 'RcppArmadillo'\n\n\nInstallation paths not writeable, unable to update packages\n  path: /opt/R/4.2.3/lib/R/library\n  packages:\n    boot, class, cluster, codetools, foreign, KernSmooth, lattice, mgcv, nlme,\n    nnet, rpart, spatial, survival\n\ninstall.packages(\"ggrepel\")\n\nInstalling package into '/home/runner/work/_temp/Library'\n(as 'lib' is unspecified)\n\ninstall.packages(c(\"parallelly\", \"purrr\", \"tidytext\"))\n\nInstalling packages into '/home/runner/work/_temp/Library'\n(as 'lib' is unspecified)\n\n\nalso installing the dependencies 'SnowballC', 'janeaustenr', 'tokenizers'\n\n## Load packages for data analysis\nlibrary(DESeq2)\n\nLoading required package: S4Vectors\n\n\nLoading required package: stats4\n\n\nLoading required package: BiocGenerics\n\n\n\nAttaching package: 'BiocGenerics'\n\n\nThe following objects are masked from 'package:stats':\n\n    IQR, mad, sd, var, xtabs\n\n\nThe following objects are masked from 'package:base':\n\n    anyDuplicated, aperm, append, as.data.frame, basename, cbind,\n    colnames, dirname, do.call, duplicated, eval, evalq, Filter, Find,\n    get, grep, grepl, intersect, is.unsorted, lapply, Map, mapply,\n    match, mget, order, paste, pmax, pmax.int, pmin, pmin.int,\n    Position, rank, rbind, Reduce, rownames, sapply, setdiff, sort,\n    table, tapply, union, unique, unsplit, which.max, which.min\n\n\n\nAttaching package: 'S4Vectors'\n\n\nThe following objects are masked from 'package:base':\n\n    expand.grid, I, unname\n\n\nLoading required package: IRanges\n\n\nLoading required package: GenomicRanges\n\n\nLoading required package: GenomeInfoDb\n\n\nLoading required package: SummarizedExperiment\n\n\nLoading required package: MatrixGenerics\n\n\nLoading required package: matrixStats\n\n\n\nAttaching package: 'MatrixGenerics'\n\n\nThe following objects are masked from 'package:matrixStats':\n\n    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,\n    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,\n    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,\n    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,\n    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,\n    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,\n    colWeightedMeans, colWeightedMedians, colWeightedSds,\n    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,\n    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,\n    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,\n    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,\n    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,\n    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,\n    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,\n    rowWeightedSds, rowWeightedVars\n\n\nLoading required package: Biobase\n\n\nWelcome to Bioconductor\n\n    Vignettes contain introductory material; view with\n    'browseVignettes()'. To cite Bioconductor, see\n    'citation(\"Biobase\")', and for packages 'citation(\"pkgname\")'.\n\n\n\nAttaching package: 'Biobase'\n\n\nThe following object is masked from 'package:MatrixGenerics':\n\n    rowMedians\n\n\nThe following objects are masked from 'package:matrixStats':\n\n    anyMissing, rowMedians\n\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following object is masked from 'package:Biobase':\n\n    combine\n\n\nThe following object is masked from 'package:matrixStats':\n\n    count\n\n\nThe following objects are masked from 'package:GenomicRanges':\n\n    intersect, setdiff, union\n\n\nThe following object is masked from 'package:GenomeInfoDb':\n\n    intersect\n\n\nThe following objects are masked from 'package:IRanges':\n\n    collapse, desc, intersect, setdiff, slice, union\n\n\nThe following objects are masked from 'package:S4Vectors':\n\n    first, intersect, rename, setdiff, setequal, union\n\n\nThe following objects are masked from 'package:BiocGenerics':\n\n    combine, intersect, setdiff, union\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(tidyr)\n\n\nAttaching package: 'tidyr'\n\n\nThe following object is masked from 'package:S4Vectors':\n\n    expand\n\nlibrary(tibble)\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ forcats   1.0.0     ✔ purrr     1.1.0\n✔ ggplot2   3.5.2     ✔ readr     2.1.5\n✔ lubridate 1.9.4     ✔ stringr   1.5.1\n\n\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ lubridate::%within%() masks IRanges::%within%()\n✖ dplyr::collapse()     masks IRanges::collapse()\n✖ dplyr::combine()      masks Biobase::combine(), BiocGenerics::combine()\n✖ dplyr::count()        masks matrixStats::count()\n✖ dplyr::desc()         masks IRanges::desc()\n✖ tidyr::expand()       masks S4Vectors::expand()\n✖ dplyr::filter()       masks stats::filter()\n✖ dplyr::first()        masks S4Vectors::first()\n✖ dplyr::lag()          masks stats::lag()\n✖ ggplot2::Position()   masks BiocGenerics::Position(), base::Position()\n✖ purrr::reduce()       masks GenomicRanges::reduce(), IRanges::reduce()\n✖ dplyr::rename()       masks S4Vectors::rename()\n✖ lubridate::second()   masks S4Vectors::second()\n✖ lubridate::second&lt;-() masks S4Vectors::second&lt;-()\n✖ dplyr::slice()        masks IRanges::slice()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(ggrepel)\n\n## Make sure you can find your file\nfile.exists(\"DAMs-full-matrix.csv\")\n\n[1] TRUE\n\n## read csv formatted data\ndam &lt;- readr::read_delim(\"DAMs-full-matrix.csv\", delim = \",\")\n\nNew names:\nRows: 90868 Columns: 77\n── Column specification\n──────────────────────────────────────────────────────── Delimiter: \",\" chr\n(9): Gene Symbol, Aliases, Ensembl ID, GO Accession, Chromosome, DBXref... dbl\n(67): Y1Homeo(raw), Y2Homeo(raw), Y3Homeo(raw), Y4Homeo(raw), Y5Homeo(ra... lgl\n(1): ...66\nℹ Use `spec()` to retrieve the full column specification for this data. ℹ\nSpecify the column types or set `show_col_types = FALSE` to quiet this message.\n• `` -&gt; `...66`\n\n\n\n\nTidy Data\nAfter importing my data file, I needed to filter and tidy the data to contain the protein coding RNA segments. I also needed to remove the normalized counts since DESeq works solely with raw counts. On top of this, my descriptions (second image) in my csv did not contain any conditions (based on age and microglia state) that match my sample. DESeq compares samples based on conditions (not sample name), so I had to create a new data.frame to make my comparisons.\n\n\n\n## Filter gene expression data to protein-coding genes only\nfiltered_dam_gene &lt;- dam %&gt;%\n  filter(`Gene Type` == \"protein-coding\")\n\n## Extract raw counts only (remove normalized columns)\nfiltered_dam_raw &lt;- filtered_dam_gene[, -34:-77]\n\n## Extract gene annotation info (e.g. gene type, description)\ndam_descriptions &lt;- filtered_dam_gene[, -1:-66]\n\n\n## Check for duplicate genes\nany(duplicated('Gene Symbol')) == FALSE\n\n[1] TRUE\n\nhead(filtered_dam_raw, 2)\n\n# A tibble: 2 × 33\n  `Gene Symbol` `Y1Homeo(raw)` `Y2Homeo(raw)` `Y3Homeo(raw)` `Y4Homeo(raw)`\n  &lt;chr&gt;                  &lt;dbl&gt;          &lt;dbl&gt;          &lt;dbl&gt;          &lt;dbl&gt;\n1 Xkr4                       0              0          20                 0\n2 Rp1                        0             17           8.21              0\n# ℹ 28 more variables: `Y5Homeo(raw)` &lt;dbl&gt;, `Y6Homeo(raw)` &lt;dbl&gt;,\n#   `Y7Homeo(raw)` &lt;dbl&gt;, `Y8Homeo(raw)` &lt;dbl&gt;, `O1Homeo(raw)` &lt;dbl&gt;,\n#   `O2Homeo(raw)` &lt;dbl&gt;, `O3Homeo(raw)` &lt;dbl&gt;, `O4Homeo(raw)` &lt;dbl&gt;,\n#   `O5Homeo(raw)` &lt;dbl&gt;, `O6Homeo(raw)` &lt;dbl&gt;, `O7Homeo(raw)` &lt;dbl&gt;,\n#   `O8Homeo(raw)` &lt;dbl&gt;, `O1Transition(raw)` &lt;dbl&gt;, `O2Transition(raw)` &lt;dbl&gt;,\n#   `O3Transition(raw)` &lt;dbl&gt;, `O4Transition(raw)` &lt;dbl&gt;,\n#   `O5Transition(raw)` &lt;dbl&gt;, `O6Transition(raw)` &lt;dbl&gt;, …\n\n## Reshape data to long format\ndr_long &lt;- filtered_dam_raw %&gt;%\n  pivot_longer(cols = 2:33, names_to = \"Samples\", values_to = \"Count\")\n\n## Create sample metadata frame (One row per sample)\ndr_description &lt;- dr_long %&gt;%\n  select(Samples) %&gt;%\n  distinct()  \n\nOn top of filtering and creating a new data.frame, I double checked to see if I had unique genes or not. The goal is to have unique expression to limit DESeq package confusion during data analysis.\n\n## Collapse duplicate genes by summing counts\nfiltered_dam_raw &lt;- filtered_dam_raw %&gt;%\n  group_by(`Gene Symbol`) %&gt;%\n  summarise(across(everything(), sum), .groups = \"drop\") %&gt;%\n  column_to_rownames(var = \"Gene Symbol\")\n\nHere is a continuation of tidying dr_description. For recap, I elongated filtered_dam_raw (count data.frame) so that my sample names would become rows instead of columns. Once I had this, I needed to remove the Gene Symbols and Counts. Below, I am adding the conditions to dr_description so that I can compare my samples based on their condition.\n\n## Annotate each sample with its condition\ndr_description &lt;- dr_description %&gt;%\n  mutate(Condition = case_when(\n    Samples %in% paste0(\"Y\", 1:8, \"Homeo(raw)\") ~ \"Young\",\n    Samples %in% paste0(\"O\", 1:8, \"Homeo(raw)\") ~ \"Old Homeostatic\",\n    Samples %in% paste0(\"O\", 1:8, \"Transition(raw)\") ~ \"Old Transition\",\n    Samples %in% paste0(\"O\", 1:8, \"DAM(raw)\") ~ \"Old Diseased\",\n    TRUE ~ NA_character_\n  ))\n\nUnfortunately, DESeq must have whole numbers. My data has decimals, so I had the data rounded and created a new data.frame for differential expression.\n\n## Convert counts to integers (rounding)\nfiltered_dam_raw_int &lt;- round(filtered_dam_raw)\n\n# Confirm all values are integers\nstopifnot(all(apply(filtered_dam_raw_int, 2, function(x) all(x == floor(x)))))\n\nFinally, I made sure my samples in my filtered_dam_raw_int matched the conditions in my dr_description_clean.\n\n## Finalize metadata: align to count matrix\ndr_description_clean &lt;- dr_description %&gt;%\n  filter(Samples %in% colnames(filtered_dam_raw_int)) %&gt;%\n  distinct(Samples, .keep_all = TRUE)\n\n# Set rownames and reorder to match count matrix columns\nrownames(dr_description_clean) &lt;- dr_description_clean$Samples\n\nWarning: Setting row names on a tibble is deprecated.\n\ndr_description_clean &lt;- dr_description_clean[colnames(filtered_dam_raw_int), ]\n\n\n\nDESeq Analysis and Plotting\nNow, with my data tidy, it is ready for differential expression analysis.\n\n## Create DESeq2 object\ndds &lt;- DESeqDataSetFromMatrix(\n  countData = filtered_dam_raw_int,\n  colData = dr_description_clean,\n  design = ~ Condition\n)\n\nconverting counts to integer mode\n\n\nWarning in DESeqDataSet(se, design = design, ignoreRank): some variables in\ndesign formula are characters, converting to factors\n\n\n  Note: levels of factors in the design contain characters other than\n  letters, numbers, '_' and '.'. It is recommended (but not required) to use\n  only letters, numbers, and delimiters '_' or '.', as these are safe characters\n  for column names in R. [This is a message, not a warning or an error]\n\n## Check data\ndds\n\nclass: DESeqDataSet \ndim: 22201 32 \nmetadata(1): version\nassays(1): counts\nrownames(22201): 0610010K14Rik 0610030E20Rik ... Zzz3 a\nrowData names(0):\ncolnames(32): Y1Homeo(raw) Y2Homeo(raw) ... O7DAM(raw) O8DAM(raw)\ncolData names(2): Samples Condition\n\n## Run DESeq\ndds &lt;- DESeq(dds)\n\nestimating size factors\n\n\n  Note: levels of factors in the design contain characters other than\n  letters, numbers, '_' and '.'. It is recommended (but not required) to use\n  only letters, numbers, and delimiters '_' or '.', as these are safe characters\n  for column names in R. [This is a message, not a warning or an error]\n\n\nestimating dispersions\n\n\ngene-wise dispersion estimates\n\n\nmean-dispersion relationship\n\n\n  Note: levels of factors in the design contain characters other than\n  letters, numbers, '_' and '.'. It is recommended (but not required) to use\n  only letters, numbers, and delimiters '_' or '.', as these are safe characters\n  for column names in R. [This is a message, not a warning or an error]\n\n\nfinal dispersion estimates\n\n\n  Note: levels of factors in the design contain characters other than\n  letters, numbers, '_' and '.'. It is recommended (but not required) to use\n  only letters, numbers, and delimiters '_' or '.', as these are safe characters\n  for column names in R. [This is a message, not a warning or an error]\n\n\nfitting model and testing\n\n\n  Note: levels of factors in the design contain characters other than\n  letters, numbers, '_' and '.'. It is recommended (but not required) to use\n  only letters, numbers, and delimiters '_' or '.', as these are safe characters\n  for column names in R. [This is a message, not a warning or an error]\n\n\n-- replacing outliers and refitting for 593 genes\n-- DESeq argument 'minReplicatesForReplace' = 7 \n-- original counts are preserved in counts(dds)\n\n\nestimating dispersions\n\n\n  Note: levels of factors in the design contain characters other than\n  letters, numbers, '_' and '.'. It is recommended (but not required) to use\n  only letters, numbers, and delimiters '_' or '.', as these are safe characters\n  for column names in R. [This is a message, not a warning or an error]\n\n\nfitting model and testing\n\n\n  Note: levels of factors in the design contain characters other than\n  letters, numbers, '_' and '.'. It is recommended (but not required) to use\n  only letters, numbers, and delimiters '_' or '.', as these are safe characters\n  for column names in R. [This is a message, not a warning or an error]\n\n\nNow that we have run DESeq, we will begin comparing our groups and making MA plots!\n\n## Get results for a specific comparison, e.g., Old Homeostatic vs Young\nres &lt;- results(dds, contrast = c(\"Condition\", \"Old Homeostatic\", \"Young\"))\n\n## View summary and top results\nsummary(res)\n\n\nout of 19371 with nonzero total read count\nadjusted p-value &lt; 0.1\nLFC &gt; 0 (up)       : 1986, 10%\nLFC &lt; 0 (down)     : 1372, 7.1%\noutliers [1]       : 0, 0%\nlow counts [2]     : 5641, 29%\n(mean count &lt; 10)\n[1] see 'cooksCutoff' argument of ?results\n[2] see 'independentFiltering' argument of ?results\n\nhead(res[order(res$padj), ])\n\nlog2 fold change (MLE): Condition Old Homeostatic vs Young \nWald test p-value: Condition Old Homeostatic vs Young \nDataFrame with 6 rows and 6 columns\n       baseMean log2FoldChange     lfcSE      stat      pvalue        padj\n      &lt;numeric&gt;      &lt;numeric&gt; &lt;numeric&gt; &lt;numeric&gt;   &lt;numeric&gt;   &lt;numeric&gt;\nRai14   1286.37        2.92889  0.189221   15.4787 4.83166e-54 6.65852e-50\nChst2   2986.10        2.45990  0.196062   12.5466 4.14983e-36 2.85944e-32\nPlaur   2127.96        1.59278  0.130198   12.2335 2.05788e-34 9.45322e-31\nCcl4    1204.69        2.14254  0.180136   11.8940 1.27117e-32 4.37951e-29\nAxl    20164.70        2.93328  0.262872   11.1586 6.50168e-29 1.79199e-25\nRxrg    1163.05        2.93516  0.266034   11.0330 2.64892e-28 6.08414e-25\n\n## Plot MA plot\nplotMA(res, main = \"DESeq2: Old Homeostatic vs Young\", ylim = c(-5, 5))\n\n\n\n\n\n\n\n## Remove NA adjusted p-values and Sort for up- and down-regulated genes\nres_clean &lt;- as.data.frame(res)\nres_clean$gene &lt;- rownames(res_clean)\nres_clean &lt;- res_clean[!is.na(res_clean$padj), ]\n\n## Create new labels for code with upregulated and downregulated genes\ntop_up &lt;- head(res_clean[order(-res_clean$log2FoldChange), ], 5)\ntop_down &lt;- head(res_clean[order(res_clean$log2FoldChange), ], 5)\n\n## Combine the different genes\ntop_genes &lt;- rbind(top_up, top_down)\n\n## Plot\np1 &lt;- ggplot(res_clean, aes(x = baseMean, y = log2FoldChange)) +\n  geom_point(alpha = 0.4, size = 1, color = \"gray\") +\n  geom_point(data = top_genes, aes(x = baseMean, y = log2FoldChange), color = \"purple\", size = 2) +\n  geom_text_repel(data = top_genes, aes(label = gene),\n                  size = 3, color = \"black\", max.overlaps = Inf) +\n  scale_x_log10() +\n  theme_minimal() +\n  labs(title = \"Old Homeostatic vs Young\",\n       x = \"Mean Expression (log10 scale)\",\n       y = \"Log2 Fold Change\")\n\nFor reference, a positive fold change is indicative of increased gene expression in the first group while a negative fold change is decreased gene expression. In the case above, a positive fold change means increased expression while a negative fold change is decreased gene expression for the Old Homeostatic group.\n\n## Get results for a specific comparison, e.g., Old Homeostatic vs Old Transition\nres2 &lt;- results(dds, contrast = c(\"Condition\", \"Old Homeostatic\", \"Old Transition\"))\n\nres2\n\nlog2 fold change (MLE): Condition Old Homeostatic vs Old Transition \nWald test p-value: Condition Old Homeostatic vs Old Transition \nDataFrame with 22201 rows and 6 columns\n                 baseMean log2FoldChange     lfcSE      stat      pvalue\n                &lt;numeric&gt;      &lt;numeric&gt; &lt;numeric&gt; &lt;numeric&gt;   &lt;numeric&gt;\n0610010K14Rik  1914.54505      0.1189025 0.0874533  1.359612    0.173953\n0610030E20Rik  3498.31457     -0.0639731 0.0673094 -0.950434    0.341892\n0610040J01Rik  4773.70143     -0.0597679 0.0579384 -1.031576    0.302271\n1110002E22Rik     7.72187     -0.3986226 1.6369824 -0.243511    0.807610\n1110004F10Rik  2508.20712      0.0842614 0.0669126  1.259277    0.207930\n...                   ...            ...       ...       ...         ...\nZyg11b        5036.323658     -0.0788722 0.0752161 -1.048608 2.94359e-01\nZyx           5425.390794      0.4253380 0.0827134  5.142309 2.71382e-07\nZzef1         3671.584224     -0.0393595 0.0848957 -0.463622 6.42919e-01\nZzz3          3045.277688     -0.0297465 0.0663525 -0.448309 6.53930e-01\na                0.586869      3.5932978 4.1580267  0.864183 3.87487e-01\n                     padj\n                &lt;numeric&gt;\n0610010K14Rik    0.547109\n0610030E20Rik    0.720344\n0610040J01Rik    0.688719\n1110002E22Rik    0.950443\n1110004F10Rik    0.587687\n...                   ...\nZyg11b        6.80702e-01\nZyx           1.85393e-05\nZzef1         8.92459e-01\nZzz3          8.96039e-01\na                      NA\n\n## View summary and top results\nsummary(res2)\n\n\nout of 19371 with nonzero total read count\nadjusted p-value &lt; 0.1\nLFC &gt; 0 (up)       : 1028, 5.3%\nLFC &lt; 0 (down)     : 372, 1.9%\noutliers [1]       : 0, 0%\nlow counts [2]     : 3778, 20%\n(mean count &lt; 2)\n[1] see 'cooksCutoff' argument of ?results\n[2] see 'independentFiltering' argument of ?results\n\nhead(res2[order(res2$padj), ])\n\nlog2 fold change (MLE): Condition Old Homeostatic vs Old Transition \nWald test p-value: Condition Old Homeostatic vs Old Transition \nDataFrame with 6 rows and 6 columns\n        baseMean log2FoldChange     lfcSE      stat      pvalue        padj\n       &lt;numeric&gt;      &lt;numeric&gt; &lt;numeric&gt; &lt;numeric&gt;   &lt;numeric&gt;   &lt;numeric&gt;\nPrg2     79.7554       25.89129  2.047970   12.6424 1.23209e-36 1.92749e-32\nHp     1026.4539        5.21930  0.441154   11.8310 2.69794e-32 2.11033e-28\nAdgre5 1510.7156        5.34388  0.488392   10.9418 7.27418e-28 3.79324e-24\nMmp9   1833.4444        4.51711  0.424105   10.6509 1.72675e-26 6.75332e-23\nPygl   1652.6317        1.71712  0.161775   10.6143 2.55839e-26 8.00470e-23\nS100a9 6956.1637        4.69965  0.449044   10.4659 1.23905e-25 3.23061e-22\n\n## Plot MA plot\nplotMA(res2, main = \"DESeq2: Old Homeostatic vs Old Transition\", ylim = c(-5, 5))\n\n\n\n\n\n\n\n## Remove NA adjusted p-values and Sort for up- and down-regulated genes\nres_clean2 &lt;- as.data.frame(res2)\nres_clean2$gene &lt;- rownames(res_clean2)\nres_clean2 &lt;- res_clean2[!is.na(res_clean2$padj), ]\n\n## Create new labels for code with upregulated and downregulated genes\ntop_up2 &lt;- head(res_clean2[order(-res_clean2$log2FoldChange), ], 5)\ntop_down2 &lt;- head(res_clean2[order(res_clean2$log2FoldChange), ], 5)\n\n## Combine genes\ntop_genes2 &lt;- rbind(top_up2, top_down2)\n\n## Plot\np2 &lt;- ggplot(res_clean2, aes(x = baseMean, y = log2FoldChange)) +\n  geom_point(alpha = 0.4, size = 1, color = \"gray\") +\n  geom_point(data = top_genes, aes(x = baseMean, y = log2FoldChange), color = \"purple\", size = 2) +\n  geom_text_repel(data = top_genes2, aes(label = gene),\n                  size = 3, color = \"black\", max.overlaps = Inf) +\n  scale_x_log10() +\n  theme_minimal() +\n  labs(title = \"Old Homeostatic vs Old Transition\",\n       x = \"Mean Expression (log10 scale)\",\n       y = \"Log2 Fold Change\")\n\n\n## Get results for a specific comparison, e.g., Old Homeostatic vs Old Diseased\nres3 &lt;- results(dds, contrast = c(\"Condition\", \"Old Homeostatic\", \"Old Diseased\"))\n\nres3\n\nlog2 fold change (MLE): Condition Old Homeostatic vs Old Diseased \nWald test p-value: Condition Old.Homeostatic vs Old.Diseased \nDataFrame with 22201 rows and 6 columns\n                 baseMean log2FoldChange     lfcSE      stat      pvalue\n                &lt;numeric&gt;      &lt;numeric&gt; &lt;numeric&gt; &lt;numeric&gt;   &lt;numeric&gt;\n0610010K14Rik  1914.54505      0.3815340 0.0876294   4.35395 1.33706e-05\n0610030E20Rik  3498.31457      0.1355991 0.0673999   2.01186 4.42347e-02\n0610040J01Rik  4773.70143      0.5570192 0.0581807   9.57395 1.02897e-21\n1110002E22Rik     7.72187      3.3456193 1.7257005   1.93870 5.25376e-02\n1110004F10Rik  2508.20712      0.0798964 0.0669312   1.19371 2.32592e-01\n...                   ...            ...       ...       ...         ...\nZyg11b        5036.323658      0.1096961 0.0752714  1.457341   0.1450223\nZyx           5425.390794      0.2075424 0.0826760  2.510312   0.0120625\nZzef1         3671.584224     -0.0753436 0.0848963 -0.887478   0.3748215\nZzz3          3045.277688      0.0838152 0.0664203  1.261891   0.2069880\na                0.586869      2.8271012 4.1579344  0.679929   0.4965493\n                     padj\n                &lt;numeric&gt;\n0610010K14Rik 1.33860e-04\n0610030E20Rik 1.33410e-01\n0610040J01Rik 1.54167e-19\n1110002E22Rik          NA\n1110004F10Rik 4.31210e-01\n...                   ...\nZyg11b           0.316168\nZyx              0.048128\nZzef1            0.581435\nZzz3             0.399323\na                      NA\n\n## View summary and top results\nsummary(res3)\n\n\nout of 19371 with nonzero total read count\nadjusted p-value &lt; 0.1\nLFC &gt; 0 (up)       : 1853, 9.6%\nLFC &lt; 0 (down)     : 2133, 11%\noutliers [1]       : 0, 0%\nlow counts [2]     : 6387, 33%\n(mean count &lt; 19)\n[1] see 'cooksCutoff' argument of ?results\n[2] see 'independentFiltering' argument of ?results\n\nhead(res3[order(res3$padj), ])\n\nlog2 fold change (MLE): Condition Old Homeostatic vs Old Diseased \nWald test p-value: Condition Old.Homeostatic vs Old.Diseased \nDataFrame with 6 rows and 6 columns\n         baseMean log2FoldChange     lfcSE      stat      pvalue        padj\n        &lt;numeric&gt;      &lt;numeric&gt; &lt;numeric&gt; &lt;numeric&gt;   &lt;numeric&gt;   &lt;numeric&gt;\nAdgrg1   44040.43       0.935318 0.0577782   16.1881 6.12148e-59 7.97935e-55\nTmem119 112289.01       0.959357 0.0629640   15.2366 2.02112e-52 1.31727e-48\nSlc2a5   25742.23       1.167810 0.0796562   14.6606 1.15201e-48 5.00547e-45\nSnn      13226.87       0.904530 0.0623694   14.5028 1.16338e-47 3.79115e-44\nKcnj2     4121.23      -1.214933 0.0844207  -14.3914 5.85893e-47 1.52742e-43\nCmtm6    47658.04       0.548049 0.0383383   14.2951 2.34772e-46 5.10042e-43\n\n## Plot MA plot\nplotMA(res3, main = \"DESeq2: Old Homeostatic vs Old Diseased\", ylim = c(-5, 5))\n\n\n\n\n\n\n\n## Remove NA adjusted p-values and Sort for up- and down-regulated genes\nres_clean3 &lt;- as.data.frame(res3)\nres_clean3$gene &lt;- rownames(res_clean3)\nres_clean3 &lt;- res_clean3[!is.na(res_clean3$padj), ]\n\n## Create new labels for code with upregulated and downregulated genes\ntop_up3 &lt;- head(res_clean3[order(-res_clean3$log2FoldChange), ], 5)\ntop_down3 &lt;- head(res_clean3[order(res_clean3$log2FoldChange), ], 5)\n\n## Combine genes\ntop_genes3 &lt;- rbind(top_up3, top_down3)\n\n## Plot\np3 &lt;- ggplot(res_clean3, aes(x = baseMean, y = log2FoldChange)) +\n  geom_point(alpha = 0.4, size = 1, color = \"gray\") +\n  geom_point(data = top_genes3, aes(x = baseMean, y = log2FoldChange), color = \"purple\", size = 2) +\n  geom_text_repel(data = top_genes3, aes(label = gene),\n                  size = 3, color = \"black\", max.overlaps = Inf) +\n  scale_x_log10() +\n  theme_minimal() +\n  labs(title = \"Old Homeostatic vs Old DAMs\",\n       x = \"Mean Expression (log10 scale)\",\n       y = \"Log2 Fold Change\")\n\nContinuing to plot different comparisons.\n\n## Get results for a specific comparison, e.g., Young vs Old Transition\nres4 &lt;- results(dds, contrast = c(\"Condition\", \"Young\", \"Old Transition\"))\n\nres4\n\nlog2 fold change (MLE): Condition Young vs Old Transition \nWald test p-value: Condition Young vs Old Transition \nDataFrame with 22201 rows and 6 columns\n                 baseMean log2FoldChange     lfcSE       stat     pvalue\n                &lt;numeric&gt;      &lt;numeric&gt; &lt;numeric&gt;  &lt;numeric&gt;  &lt;numeric&gt;\n0610010K14Rik  1914.54505      0.1881979 0.0875179  2.1503942 0.03152405\n0610030E20Rik  3498.31457     -0.0500762 0.0673806 -0.7431848 0.45736980\n0610040J01Rik  4773.70143      0.1596006 0.0579317  2.7549775 0.00586962\n1110002E22Rik     7.72187      0.0761613 1.6353375  0.0465722 0.96285417\n1110004F10Rik  2508.20712      0.1297734 0.0669929  1.9371205 0.05273062\n...                   ...            ...       ...        ...        ...\nZyg11b        5036.323658      0.1375597 0.0752117   1.828966  0.0674047\nZyx           5425.390794      0.1090371 0.0828153   1.316630  0.1879627\nZzef1         3671.584224     -0.0190038 0.0849494  -0.223707  0.8229854\nZzz3          3045.277688      0.0453274 0.0664072   0.682568  0.4948796\na                0.586869      0.0000000 4.2061055   0.000000  1.0000000\n                   padj\n              &lt;numeric&gt;\n0610010K14Rik 0.1975395\n0610030E20Rik 0.7772640\n0610040J01Rik 0.0679052\n1110002E22Rik 0.9906078\n1110004F10Rik 0.2693141\n...                 ...\nZyg11b         0.310119\nZyx            0.528323\nZzef1          0.953190\nZzz3           0.803114\na                    NA\n\n## View summary and top results\nsummary(res4)\n\n\nout of 19371 with nonzero total read count\nadjusted p-value &lt; 0.1\nLFC &gt; 0 (up)       : 648, 3.3%\nLFC &lt; 0 (down)     : 979, 5.1%\noutliers [1]       : 0, 0%\nlow counts [2]     : 4151, 21%\n(mean count &lt; 3)\n[1] see 'cooksCutoff' argument of ?results\n[2] see 'independentFiltering' argument of ?results\n\nhead(res4[order(res4$padj), ])\n\nlog2 fold change (MLE): Condition Young vs Old Transition \nWald test p-value: Condition Young vs Old Transition \nDataFrame with 6 rows and 6 columns\n        baseMean log2FoldChange     lfcSE      stat      pvalue        padj\n       &lt;numeric&gt;      &lt;numeric&gt; &lt;numeric&gt; &lt;numeric&gt;   &lt;numeric&gt;   &lt;numeric&gt;\nRai14  1286.3681       -2.51773  0.189441  -13.2903 2.63574e-40 4.02504e-36\nChst2  2986.1013       -2.53912  0.196047  -12.9516 2.30013e-38 1.75627e-34\nLy9    5941.3170       -1.42382  0.135855  -10.4804 1.06304e-25 5.41124e-22\nKcnj10 1187.7794       -1.21653  0.118669  -10.2514 1.16632e-24 4.45271e-21\nPrg2     79.7554       20.89618  2.056391   10.1616 2.94267e-24 7.48958e-21\nSt14   4860.5571       -1.04384  0.102623  -10.1715 2.65647e-24 7.48958e-21\n\n## Plot MA plot\nplotMA(res4, main = \"DESeq2: Young vs Old Transition\", ylim = c(-5, 5))\n\n\n\n\n\n\n\n## Remove NA adjusted p-values and Sort for up- and down-regulated genes\nres_clean4 &lt;- as.data.frame(res4)\nres_clean4$gene &lt;- rownames(res_clean4)\nres_clean4 &lt;- res_clean4[!is.na(res_clean4$padj), ]\n\n## Create new labels for code with upregulated and downregulated genes\ntop_up4 &lt;- head(res_clean4[order(-res_clean4$log2FoldChange), ], 5)\ntop_down4 &lt;- head(res_clean4[order(res_clean4$log2FoldChange), ], 5)\n\n## Combine genes\ntop_genes4 &lt;- rbind(top_up4, top_down4)\n\n## Plot\np4 &lt;- ggplot(res_clean4, aes(x = baseMean, y = log2FoldChange)) +\n  geom_point(alpha = 0.4, size = 1, color = \"gray\") +\n  geom_point(data = top_genes4, aes(x = baseMean, y = log2FoldChange), color = \"purple\", size = 2) +\n  geom_text_repel(data = top_genes4, aes(label = gene),\n                  size = 3, color = \"black\", max.overlaps = Inf) +\n  scale_x_log10() +\n  theme_minimal() +\n  labs(title = \"Young vs Old Transition\",\n       x = \"Mean Expression (log10 scale)\",\n       y = \"Log2 Fold Change\")\n\nAt this point, we are repeating code to view all comparisons.\n\n## Get results for a specific comparison, e.g., Old Homeostatic vs Old Diseased\nres5 &lt;- results(dds, contrast = c(\"Condition\", \"Young\", \"Old Diseased\"))\n\nres5\n\nlog2 fold change (MLE): Condition Young vs Old Diseased \nWald test p-value: Condition Young vs Old.Diseased \nDataFrame with 22201 rows and 6 columns\n                 baseMean log2FoldChange     lfcSE      stat      pvalue\n                &lt;numeric&gt;      &lt;numeric&gt; &lt;numeric&gt; &lt;numeric&gt;   &lt;numeric&gt;\n0610010K14Rik  1914.54505       0.450829 0.0876938   5.14095 2.73357e-07\n0610030E20Rik  3498.31457       0.149496 0.0674710   2.21571 2.67115e-02\n0610040J01Rik  4773.70143       0.776388 0.0581741  13.34595 1.25074e-40\n1110002E22Rik     7.72187       3.820403 1.7241402   2.21583 2.67031e-02\n1110004F10Rik  2508.20712       0.125408 0.0670116   1.87144 6.12838e-02\n...                   ...            ...       ...       ...         ...\nZyg11b        5036.323658      0.3261280 0.0752670  4.332946 1.47127e-05\nZyx           5425.390794     -0.1087585 0.0827778 -1.313860 1.88893e-01\nZzef1         3671.584224     -0.0549879 0.0849501 -0.647297 5.17440e-01\nZzz3          3045.277688      0.1588891 0.0664749  2.390211 1.68387e-02\na                0.586869     -0.5860863 4.2060125 -0.139345 8.89178e-01\n                     padj\n                &lt;numeric&gt;\n0610010K14Rik 1.74080e-06\n0610030E20Rik 6.51408e-02\n0610040J01Rik 1.03244e-38\n1110002E22Rik 6.51327e-02\n1110004F10Rik 1.30192e-01\n...                   ...\nZyg11b        0.000073716\nZyx           0.321797263\nZzef1         0.668965542\nZzz3          0.044137220\na                      NA\n\n## View summary and top results\nsummary(res5)\n\n\nout of 19371 with nonzero total read count\nadjusted p-value &lt; 0.1\nLFC &gt; 0 (up)       : 3228, 17%\nLFC &lt; 0 (down)     : 3558, 18%\noutliers [1]       : 0, 0%\nlow counts [2]     : 4151, 21%\n(mean count &lt; 3)\n[1] see 'cooksCutoff' argument of ?results\n[2] see 'independentFiltering' argument of ?results\n\nhead(res5[order(res5$padj), ])\n\nlog2 fold change (MLE): Condition Young vs Old Diseased \nWald test p-value: Condition Young vs Old.Diseased \nDataFrame with 6 rows and 6 columns\n        baseMean log2FoldChange     lfcSE      stat       pvalue         padj\n       &lt;numeric&gt;      &lt;numeric&gt; &lt;numeric&gt; &lt;numeric&gt;    &lt;numeric&gt;    &lt;numeric&gt;\nRai14    1286.37       -4.64159 0.1887654  -24.5892 1.64851e-133 2.51743e-129\nKcnj2    4121.23       -1.80807 0.0847416  -21.3362 5.23509e-101  3.99726e-97\nChst2    2986.10       -4.15379 0.1958621  -21.2078 8.09937e-100  4.12285e-96\nAdgrg1  44040.43        1.21414 0.0577756   21.0147  4.81259e-98  1.46986e-94\nTlr2    11519.20       -1.81064 0.0861379  -21.0202  4.28228e-98  1.46986e-94\nP2ry12 123103.12        1.41196 0.0703287   20.0766  1.18165e-89  3.00750e-86\n\n## Plot MA plot\nplotMA(res5, main = \"DESeq2: Young vs Old DAMs\", ylim = c(-5, 5))\n\n\n\n\n\n\n\n## Remove NA adjusted p-values and Sort for up- and down-regulated genes\nres_clean5 &lt;- as.data.frame(res5)\nres_clean5$gene &lt;- rownames(res_clean5)\nres_clean5 &lt;- res_clean5[!is.na(res_clean5$padj), ]\n\n## Create new labels for code with upregulated and downregulated genes\ntop_up5 &lt;- head(res_clean5[order(-res_clean5$log2FoldChange), ], 5)\ntop_down5 &lt;- head(res_clean5[order(res_clean5$log2FoldChange), ], 5)\n\n## Combine genes\ntop_genes5 &lt;- rbind(top_up5, top_down5)\n\n## Plot\np5 &lt;- ggplot(res_clean5, aes(x = baseMean, y = log2FoldChange)) +\n  geom_point(alpha = 0.4, size = 1, color = \"gray\") +\n  geom_point(data = top_genes4, aes(x = baseMean, y = log2FoldChange), color = \"purple\", size = 2) +\n  geom_text_repel(data = top_genes5, aes(label = gene),\n                  size = 3, color = \"black\", max.overlaps = Inf) +\n  scale_x_log10() +\n  theme_minimal() +\n  labs(title = \"Young vs Old DAMs\",\n       x = \"Mean Expression (log10 scale)\",\n       y = \"Log2 Fold Change\")\n\n\n\nAssembling MA Plots: Up and Down-regulated Genes\nNow, we want to have a nice picture with all of our plots together, so we will patch several of the graphs and save it as an image.\n\n## Display all ggplots together\ninstall.packages(\"patchwork\")\n\nInstalling package into '/home/runner/work/_temp/Library'\n(as 'lib' is unspecified)\n\nlibrary(patchwork)\n\n## Saving patched variables as one \n p25 &lt;- p1 + p2 + p3 + p4 + p5\n \n## Saving plot\np25\n\n\n\n\n\n\n\nggsave(\"my_microglia_plot.png\", plot = p25, width = 14, height = 9, dpi = 300)"
  }
]