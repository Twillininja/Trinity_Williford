quarto create project website
quarto preview
# preview the website in the current directory
quarto preview
render
preview
preview
quarto preview
quarto render
quartorender
'quartorender'
"quarto render"
quarto preview
## install packages and open library
BiocManager::install("DESeq2")
library(DESeq2)
## Load packages for data analysis
install.packages("ggrepel")
library(dplyr)
library(tidyr)
library(tibble)
library(tidyverse)
library(ggrepel)
## Make sure you can find your file
file.exists("DAMs-full-matrix.csv")
## read csv formatted data
dam <- readr::read_delim("DAMs-full-matrix.csv", delim = ",")
install.packages(c("parallelly", "purrr", "tidytext"))
## install packages and open library
install.packages("BiocManager")
## Check for duplicate genes
any(duplicated('Gene Symbol')) == FALSE
head(filtered_dam_raw, 2)
## Filter gene expression data to protein-coding genes only
filtered_dam_gene <- dam %>%
filter(`Gene Type` == "protein-coding")
## install packages and open library
install.packages("BiocManager")
BiocManager::install("DESeq2")
install.packages("ggrepel")
install.packages(c("parallelly", "purrr", "tidytext"))
## Load packages for data analysis
library(DESeq2)
library(dplyr)
library(tidyr)
library(tibble)
library(tidyverse)
library(ggrepel)
## Make sure you can find your file
file.exists("DAMs-full-matrix.csv")
## read csv formatted data
dam <- readr::read_delim("DAMs-full-matrix.csv", delim = ",")
## Filter gene expression data to protein-coding genes only
filtered_dam_gene <- dam %>%
filter(`Gene Type` == "protein-coding")
## Extract raw counts only (remove normalized columns)
filtered_dam_raw <- filtered_dam_gene[, -34:-77]
## Extract gene annotation info (e.g. gene type, description)
dam_descriptions <- filtered_dam_gene[, -1:-66]
## Check for duplicate genes
any(duplicated('Gene Symbol')) == FALSE
head(filtered_dam_raw, 2)
## Reshape data to long format
dr_long <- filtered_dam_raw %>%
pivot_longer(cols = 2:33, names_to = "Samples", values_to = "Count")
## Create sample metadata frame (One row per sample)
dr_description <- dr_long %>%
select(Samples) %>%
distinct()
!any(duplicated('Gene Symbol'))
